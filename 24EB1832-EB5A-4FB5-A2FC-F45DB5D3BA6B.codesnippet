<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>lyRefreshVMQuickInit</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>final class &lt;#VM#&gt;: LYRefreshVM&lt;&lt;#ListModel#&gt;, &lt;#ListCell#&gt;&gt;,
UITableViewDelegate, UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell {
        let cell = &lt;#CellType#&gt;.cellWithTableView(tableView, indexPath: indexPath)
        cell.model = models[indexPath.row]
        cell.line.isHidden = (indexPath.row == models.count - 1)
        return cell
    }
//    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
//        tableView.deselectRow(at: indexPath, animated: true)
//        guard let cell = tableView.cellForRow(at: indexPath) as? &lt;#CellType#&gt; else { return }
//        let selModel = models[indexPath.row]
//        vmDidSelectCell?(cell, selModel, indexPath)
//    }
}

extension &lt;#VM#&gt;: LYVMRefreshProtocol {
    
    ///   列表
    func reqList(_ isRefresh: Bool, _ callback: @escaping (LYError?) -&gt; Void) {
        
        let pageNum = isRefresh ? 1 : page
        let param = ["page": pageNum,
                     "count": kPageSize] as [String : Any]
        listReq = infoNet.request(.followList(id), param: param, success: { [weak self](response) in
            guard let `self` = self else { return }
            guard let data = response["data"]["aaaa"].arrayObject as? [[String: Any]] else {
                callback(.data("Invalid data format"))
                return
            }
            let models = &lt;#Model#&gt;.ly.objArray(with: data)
            self.hasMore = models.count == kPageSize
            if isRefresh {
                self.page = 1
                self.models = models
            } else {
                self.models.append(contentsOf: models)
            }
            callback(nil)
        }) { (error) in
            callback(error)
        }
    }
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>24EB1832-EB5A-4FB5-A2FC-F45DB5D3BA6B</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Generic</string>
	<key>IDECodeSnippetTitle</key>
	<string>RefreshVM - Quick Init</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
