<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>lyRefreshCellQuickInit</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>extension &lt;#CellClass#&gt; {

static func cell(withTableView tableView: UITableView, indexPath: IndexPath) -&gt; &lt;#CellClass#&gt; {
    guard let cell = tableView.dequeueReusableCell(withIdentifier: cellReuseId, for: indexPath) as? &lt;#CellClass#&gt; else {
    return &lt;#CellClass#&gt;(style: .default, reuseIdentifier: cellReuseId)
};  return cell
}
static var cellReuseId: String { return "&lt;#CellClass#&gt;" }
private var cHeight: CGFloat { return &lt;#CellClass#&gt;.cellHeight }
    static var cellHeight: CGFloat { return &lt;#cellHeight#&gt;}
    }
    
    final class &lt;#CellClass#&gt;: UITableViewCell {
    override init(style: UITableViewCell.CellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        p_initSubViews()
    }
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    private(set) var line: UIView!
    
    var model = &lt;#CellModelType#&gt;() {
    didSet {
        
    }
}
}

extension &lt;#CellClass#&gt; {
fileprivate func p_initSubViews() {
    self.backgroundColor = UIColor.white
    self.selectionStyle = .none
    
    
}
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>CBD855A5-2A6C-4EFF-8675-9828338E25AA</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Generic</string>
	<key>IDECodeSnippetTitle</key>
	<string>RefreshCell - Quick Init</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
